package parser;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static psi.CobolTypes.*;

%%

%{
  public _CobolLexer() {
    this((java.io.Reader)null);
  }
%}

%public
%class _CobolLexer
%implements FlexLexer
%function advance
%type IElementType
%unicode

EOL=\R
WHITE_SPACE=\s+


%%
<YYINITIAL> {
  {WHITE_SPACE}            { return WHITE_SPACE; }

  "COBOL_WORD"             { return COBOL_WORD; }
  "LEVEL_66"               { return LEVEL_66; }
  "LEVEL_77"               { return LEVEL_77; }
  "LEVEL_88"               { return LEVEL_88; }
  "LEVEL_NUMBER"           { return LEVEL_NUMBER; }
  "INTEGER"                { return INTEGER; }
  "PLUSCHAR"               { return PLUSCHAR; }
  "MINUSCHAR"              { return MINUSCHAR; }
  "DOTCHAR"                { return DOTCHAR; }
  "ZERO"                   { return ZERO; }
  "ZEROS"                  { return ZEROS; }
  "ZEROES"                 { return ZEROES; }
  "SPACE"                  { return SPACE; }
  "SPACES"                 { return SPACES; }
  "HIGH_VALUE"             { return HIGH_VALUE; }
  "HIGH_VALUES"            { return HIGH_VALUES; }
  "LOW_VALUE"              { return LOW_VALUE; }
  "LOW_VALUES"             { return LOW_VALUES; }
  "QUOTE"                  { return QUOTE; }
  "QUOTES"                 { return QUOTES; }
  "NULL"                   { return NULL; }
  "NULLS"                  { return NULLS; }
  "QUOTEDSTRING"           { return QUOTEDSTRING; }
  "HEXNUMBER"              { return HEXNUMBER; }
  "ALL"                    { return ALL; }
  "AND"                    { return AND; }
  "OR"                     { return OR; }
  "NOT"                    { return NOT; }
  "LPARENCHAR"             { return LPARENCHAR; }
  "RPARENCHAR"             { return RPARENCHAR; }
  "IS"                     { return IS; }
  "NUMERIC"                { return NUMERIC; }
  "ALPHABETIC"             { return ALPHABETIC; }
  "ALPHABETIC_LOWER"       { return ALPHABETIC_LOWER; }
  "ALPHABETIC_UPPER"       { return ALPHABETIC_UPPER; }
  "DBCS"                   { return DBCS; }
  "KANJI"                  { return KANJI; }
  "POSITIVE"               { return POSITIVE; }
  "NEGATIVE"               { return NEGATIVE; }
  "GREATER"                { return GREATER; }
  "THAN"                   { return THAN; }
  "MORETHANCHAR"           { return MORETHANCHAR; }
  "LESS"                   { return LESS; }
  "LESSTHANCHAR"           { return LESSTHANCHAR; }
  "EQUAL"                  { return EQUAL; }
  "TO"                     { return TO; }
  "EQUALCHAR"              { return EQUALCHAR; }
  "MORETHANOREQUAL"        { return MORETHANOREQUAL; }
  "LESSTHANOREQUAL"        { return LESSTHANOREQUAL; }
  "IN"                     { return IN; }
  "OF"                     { return OF; }
  "COLONCHAR"              { return COLONCHAR; }
  "LINAGE_COUNTER"         { return LINAGE_COUNTER; }
  "ADDRESS"                { return ADDRESS; }
  "DEBUG_ITEM"             { return DEBUG_ITEM; }
  "LENGTH"                 { return LENGTH; }
  "RETURN_CODE"            { return RETURN_CODE; }
  "SHIFT_OUT"              { return SHIFT_OUT; }
  "SHIFT_IN"               { return SHIFT_IN; }
  "SORT_CONTROL"           { return SORT_CONTROL; }
  "SORT_CORE_SIZE"         { return SORT_CORE_SIZE; }
  "SORT_FILE_SIZE"         { return SORT_FILE_SIZE; }
  "SORT_MESSAGE"           { return SORT_MESSAGE; }
  "SORT_MODE_SIZE"         { return SORT_MODE_SIZE; }
  "SORT_RETURN"            { return SORT_RETURN; }
  "TALLY"                  { return TALLY; }
  "WHEN_COMPILED"          { return WHEN_COMPILED; }
  "ASTERISKCHAR"           { return ASTERISKCHAR; }
  "SLASHCHAR"              { return SLASHCHAR; }
  "DOT"                    { return DOT; }
  "EOF"                    { return EOF; }
  "END"                    { return END; }
  "PROGRAM"                { return PROGRAM; }
  "IDENTIFICATION"         { return IDENTIFICATION; }
  "DIVISION"               { return DIVISION; }
  "ID"                     { return ID; }
  "PROGRAM_ID"             { return PROGRAM_ID; }
  "INITIAL"                { return INITIAL; }
  "COMMON"                 { return COMMON; }
  "AUTHOR"                 { return AUTHOR; }
  "INSTALLATION"           { return INSTALLATION; }
  "DATE_WRITTEN"           { return DATE_WRITTEN; }
  "DATE_COMPILED"          { return DATE_COMPILED; }
  "SECURITY"               { return SECURITY; }
  "ENVIRONMENT"            { return ENVIRONMENT; }
  "CONFIGURATION"          { return CONFIGURATION; }
  "SECTION"                { return SECTION; }
  "SOURCE_COMPUTER"        { return SOURCE_COMPUTER; }
  "WITH"                   { return WITH; }
  "DEBUGGING"              { return DEBUGGING; }
  "MODE"                   { return MODE; }
  "OBJECT_COMPUTER"        { return OBJECT_COMPUTER; }
  "MEMORY"                 { return MEMORY; }
  "SIZE"                   { return SIZE; }
  "WORDS"                  { return WORDS; }
  "CHARACTERS"             { return CHARACTERS; }
  "MODULES"                { return MODULES; }
  "COLLATING"              { return COLLATING; }
  "SEQUENCE"               { return SEQUENCE; }
  "SEGMENT"                { return SEGMENT; }
  "LIMIT"                  { return LIMIT; }
  "CHARACTER"              { return CHARACTER; }
  "SET"                    { return SET; }
  "SPECIAL_NAMES"          { return SPECIAL_NAMES; }
  "ALPHABET"               { return ALPHABET; }
  "STANDARD_1"             { return STANDARD_1; }
  "STANDARD_2"             { return STANDARD_2; }
  "NATIVE"                 { return NATIVE; }
  "THROUGH"                { return THROUGH; }
  "THRU"                   { return THRU; }
  "ALSO"                   { return ALSO; }
  "CLASS"                  { return CLASS; }
  "CURRENCY"               { return CURRENCY; }
  "SIGN"                   { return SIGN; }
  "DECIMAL_POINT"          { return DECIMAL_POINT; }
  "COMMA"                  { return COMMA; }
  "SYMBOLIC"               { return SYMBOLIC; }
  "ARE"                    { return ARE; }
  "ON"                     { return ON; }
  "STATUS"                 { return STATUS; }
  "OFF"                    { return OFF; }
  "INPUT_OUTPUT"           { return INPUT_OUTPUT; }
  "FILE_CONTROL"           { return FILE_CONTROL; }
  "SELECT"                 { return SELECT; }
  "OPTIONAL"               { return OPTIONAL; }
  "ASSIGN"                 { return ASSIGN; }
  "RESERVE"                { return RESERVE; }
  "AREA"                   { return AREA; }
  "AREAS"                  { return AREAS; }
  "ORGANIZATION"           { return ORGANIZATION; }
  "SEQUENTIAL"             { return SEQUENTIAL; }
  "LINE"                   { return LINE; }
  "INDEXED"                { return INDEXED; }
  "PADDING"                { return PADDING; }
  "RECORD"                 { return RECORD; }
  "DELIMITER"              { return DELIMITER; }
  "IMPLICIT"               { return IMPLICIT; }
  "ACCESS"                 { return ACCESS; }
  "RANDOM"                 { return RANDOM; }
  "DYNAMIC"                { return DYNAMIC; }
  "RELATIVE"               { return RELATIVE; }
  "KEY"                    { return KEY; }
  "ALTERNATE"              { return ALTERNATE; }
  "DUPLICATES"             { return DUPLICATES; }
  "PASSWORD"               { return PASSWORD; }
  "FILE"                   { return FILE; }
  "I_O_CONTROL"            { return I_O_CONTROL; }
  "RERUN"                  { return RERUN; }
  "EVERY"                  { return EVERY; }
  "CLOCK_UNITS"            { return CLOCK_UNITS; }
  "RECORDS"                { return RECORDS; }
  "REEL"                   { return REEL; }
  "UNIT"                   { return UNIT; }
  "SAME"                   { return SAME; }
  "SORT"                   { return SORT; }
  "SORT_MERGE"             { return SORT_MERGE; }
  "FOR"                    { return FOR; }
  "MULTIPLE"               { return MULTIPLE; }
  "TAPE"                   { return TAPE; }
  "CONTAINS"               { return CONTAINS; }
  "POSITION"               { return POSITION; }
  "DATA"                   { return DATA; }
  "FD"                     { return FD; }
  "SD"                     { return SD; }
  "GLOBAL"                 { return GLOBAL; }
  "BLOCK"                  { return BLOCK; }
  "VARYING"                { return VARYING; }
  "FROM"                   { return FROM; }
  "DEPENDING"              { return DEPENDING; }
  "LABEL"                  { return LABEL; }
  "OMITTED"                { return OMITTED; }
  "STANDARD"               { return STANDARD; }
  "VALUE"                  { return VALUE; }
  "LINAGE"                 { return LINAGE; }
  "LINES"                  { return LINES; }
  "FOOTING"                { return FOOTING; }
  "AT"                     { return AT; }
  "TOP"                    { return TOP; }
  "BOTTOM"                 { return BOTTOM; }
  "RECORDING"              { return RECORDING; }
  "CODE_SET"               { return CODE_SET; }
  "REPORT"                 { return REPORT; }
  "REPORTS"                { return REPORTS; }
  "FILLER"                 { return FILLER; }
  "REDEFINES"              { return REDEFINES; }
  "BLANK"                  { return BLANK; }
  "WHEN"                   { return WHEN; }
  "JUSTIFIED"              { return JUSTIFIED; }
  "JUST"                   { return JUST; }
  "RIGHT"                  { return RIGHT; }
  "OCCURS"                 { return OCCURS; }
  "TIMES"                  { return TIMES; }
  "ASCENDING"              { return ASCENDING; }
  "DESCENDING"             { return DESCENDING; }
  "BY"                     { return BY; }
  "PICTURE"                { return PICTURE; }
  "PIC"                    { return PIC; }
  "COMMACHAR"              { return COMMACHAR; }
  "DOLLARCHAR"             { return DOLLARCHAR; }
  "USAGE"                  { return USAGE; }
  "BINARY"                 { return BINARY; }
  "COMP"                   { return COMP; }
  "COMP_1"                 { return COMP_1; }
  "COMP_2"                 { return COMP_2; }
  "COMP_3"                 { return COMP_3; }
  "COMP_4"                 { return COMP_4; }
  "COMPUTATIONAL"          { return COMPUTATIONAL; }
  "COMPUTATIONAL_1"        { return COMPUTATIONAL_1; }
  "COMPUTATIONAL_2"        { return COMPUTATIONAL_2; }
  "COMPUTATIONAL_3"        { return COMPUTATIONAL_3; }
  "COMPUTATIONAL_4"        { return COMPUTATIONAL_4; }
  "DISPLAY"                { return DISPLAY; }
  "DISPLAY_1"              { return DISPLAY_1; }
  "INDEX"                  { return INDEX; }
  "PACKED_DECIMAL"         { return PACKED_DECIMAL; }
  "POINTER"                { return POINTER; }
  "LEADING"                { return LEADING; }
  "TRAILING"               { return TRAILING; }
  "SEPARATE"               { return SEPARATE; }
  "SYNCHRONIZED"           { return SYNCHRONIZED; }
  "SYNC"                   { return SYNC; }
  "LEFT"                   { return LEFT; }
  "VALUES"                 { return VALUES; }
  "RENAMES"                { return RENAMES; }
  "WORKING_STORAGE"        { return WORKING_STORAGE; }
  "LINKAGE"                { return LINKAGE; }
  "PROCEDURE"              { return PROCEDURE; }
  "USING"                  { return USING; }
  "DECLARATIVES"           { return DECLARATIVES; }
  "ACCEPT"                 { return ACCEPT; }
  "DATE"                   { return DATE; }
  "DAY"                    { return DAY; }
  "DAY_OF_WEEK"            { return DAY_OF_WEEK; }
  "TIME"                   { return TIME; }
  "ADD"                    { return ADD; }
  "CORRESPONDING"          { return CORRESPONDING; }
  "CORR"                   { return CORR; }
  "ROUNDED"                { return ROUNDED; }
  "GIVING"                 { return GIVING; }
  "ERROR"                  { return ERROR; }
  "END_ADD"                { return END_ADD; }
  "GO"                     { return GO; }
  "ALTER"                  { return ALTER; }
  "PROCEED"                { return PROCEED; }
  "CALL"                   { return CALL; }
  "REFERENCE"              { return REFERENCE; }
  "CONTENT"                { return CONTENT; }
  "OVERFLOW"               { return OVERFLOW; }
  "EXCEPTION"              { return EXCEPTION; }
  "END_CALL"               { return END_CALL; }
  "CANCEL"                 { return CANCEL; }
  "CLOSE"                  { return CLOSE; }
  "REMOVAL"                { return REMOVAL; }
  "NO"                     { return NO; }
  "REWIND"                 { return REWIND; }
  "LOCK"                   { return LOCK; }
  "COMPUTE"                { return COMPUTE; }
  "END_COMPUTE"            { return END_COMPUTE; }
  "CONTINUE"               { return CONTINUE; }
  "DELETE"                 { return DELETE; }
  "INVALID"                { return INVALID; }
  "END_DELETE"             { return END_DELETE; }
  "UPON"                   { return UPON; }
  "ADVANCING"              { return ADVANCING; }
  "DIVIDE"                 { return DIVIDE; }
  "INTO"                   { return INTO; }
  "REMAINDER"              { return REMAINDER; }
  "END_DIVIDE"             { return END_DIVIDE; }
  "ENTRY"                  { return ENTRY; }
  "EVALUATE"               { return EVALUATE; }
  "OTHER"                  { return OTHER; }
  "END_EVALUATE"           { return END_EVALUATE; }
  "TRUE"                   { return TRUE; }
  "FALSE"                  { return FALSE; }
  "ANY"                    { return ANY; }
  "EXIT"                   { return EXIT; }
  "GOBACK"                 { return GOBACK; }
  "MORE_LABELS"            { return MORE_LABELS; }
  "IF"                     { return IF; }
  "THEN"                   { return THEN; }
  "NEXT"                   { return NEXT; }
  "SENTENCE"               { return SENTENCE; }
  "ELSE"                   { return ELSE; }
  "END_IF"                 { return END_IF; }
  "INITIALIZE"             { return INITIALIZE; }
  "REPLACING"              { return REPLACING; }
  "ALPHANUMERIC"           { return ALPHANUMERIC; }
  "ALPHANUMERIC_EDITED"    { return ALPHANUMERIC_EDITED; }
  "NUMERIC_EDITED"         { return NUMERIC_EDITED; }
  "EGCS"                   { return EGCS; }
  "INSPECT"                { return INSPECT; }
  "TALLYING"               { return TALLYING; }
  "CONVERTING"             { return CONVERTING; }
  "FIRST"                  { return FIRST; }
  "BEFORE"                 { return BEFORE; }
  "AFTER"                  { return AFTER; }
  "MERGE"                  { return MERGE; }
  "OUTPUT"                 { return OUTPUT; }
  "MOVE"                   { return MOVE; }
  "MULTIPLY"               { return MULTIPLY; }
  "END_MULTIPLY"           { return END_MULTIPLY; }
  "OPEN"                   { return OPEN; }
  "INPUT"                  { return INPUT; }
  "REVERSED"               { return REVERSED; }
  "I_O"                    { return I_O; }
  "EXTEND"                 { return EXTEND; }
  "PERFORM"                { return PERFORM; }
  "END_PERFORM"            { return END_PERFORM; }
  "UNTIL"                  { return UNTIL; }
  "TEST"                   { return TEST; }
  "READ"                   { return READ; }
  "END_READ"               { return END_READ; }
  "RELEASE"                { return RELEASE; }
  "RETURN"                 { return RETURN; }
  "END_RETURN"             { return END_RETURN; }
  "REWRITE"                { return REWRITE; }
  "END_REWRITE"            { return END_REWRITE; }
  "SEARCH"                 { return SEARCH; }
  "END_SEARCH"             { return END_SEARCH; }
  "UP"                     { return UP; }
  "DOWN"                   { return DOWN; }
  "ORDER"                  { return ORDER; }
  "START"                  { return START; }
  "END_START"              { return END_START; }
  "STOP"                   { return STOP; }
  "RUN"                    { return RUN; }
  "STRING"                 { return STRING; }
  "DELIMITED"              { return DELIMITED; }
  "END_STRING"             { return END_STRING; }
  "SUBTRACT"               { return SUBTRACT; }
  "END_SUBTRACT"           { return END_SUBTRACT; }
  "UNSTRING"               { return UNSTRING; }
  "COUNT"                  { return COUNT; }
  "END_UNSTRING"           { return END_UNSTRING; }
  "USE"                    { return USE; }
  "PROCEDURES"             { return PROCEDURES; }
  "BEGINNING"              { return BEGINNING; }
  "ENDING"                 { return ENDING; }
  "WRITE"                  { return WRITE; }
  "END_OF_PAGE"            { return END_OF_PAGE; }
  "EOP"                    { return EOP; }
  "END_WRITE"              { return END_WRITE; }
  "PAGE"                   { return PAGE; }


}

[^] { return BAD_CHARACTER; }
